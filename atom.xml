<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>鼎阅Android团队</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-31T10:57:00.490Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>android-dingyuegroup</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>build:gradle 3.0 以及 Support Library 27.1.0 带来的 Api 变动</title>
    <link href="http://yoursite.com/2018/09/03/new-api-in-gradle-3-0-and-support-library-27-1-0/"/>
    <id>http://yoursite.com/2018/09/03/new-api-in-gradle-3-0-and-support-library-27-1-0/</id>
    <published>2018-09-03T10:03:37.000Z</published>
    <updated>2018-10-31T10:57:00.490Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Google</strong> 又双叒升级了 Android 的开发库，我们将根目录下的 <code>build:gradle</code> 版本由原先的 <code>2.3.3</code> 升级至 <code>3.1.2</code>，随之带来的问题是 <code>Support Library</code> 也需要升级。升级之后，<code>gradle</code> 脚本以及 <code>support</code> 包下相关类的 <strong>Api</strong> 发生了重大的改动。具体需要注意的改动如下：<br><a id="more"></a></p><h3 id="build-gradle-文件"><a href="#build-gradle-文件" class="headerlink" title="build.gradle 文件"></a>build.gradle 文件</h3><p>引入依赖的方式由原来的 <code>compile</code> 变更为现在的 <code>implementation</code> 和 <code>api</code> 关键字，这两个关键字的区别在于是否能传递依赖，例如：<br><br><img src="https://www.superbed.cn/pic/5bd97ee19dc6d6216adec667" style="width:400px;" align="center"></p><blockquote><p>注意：使用旧的关键字 <code>compile</code> 进行依赖应用并不会报错，只会报警告。使用 <code>implementation</code> 可以提升编译速度。</p></blockquote><h3 id="Support-Library-27"><a href="#Support-Library-27" class="headerlink" title="Support Library 27"></a>Support Library 27</h3><p>新的 <code>support</code> 包带来便捷的新特性，如自带生命周期组件中的 <code>android.arch.lifecycle:runtime</code> 库，但对现有代码对兼容带来不小的麻烦。</p><p>⚠️最明显的变化就是 <code>Fragment</code> 中的 <code>getActivity()</code> 以及 <code>getContext()</code> 方法返回的被标记为 <code>@Nullable</code>, 也就是返回值可能为  <code>null</code> , 于是在 Kotlin 中所有获取 <code>Activity</code>、<code>Context</code> 实例的地方都需要判空操作。</p><p>其实 Google 并没有更改代码逻辑，返回 <code>null</code> 是因为 <code>fragment</code> 没有加入到 <code>actiivty</code> 中，这个逻辑处理之前的版本就存在，只是相比之前加上 <code>@Nullable</code> 注解，具体可以看这里的解释：<a href="https://stackoverflow.com/a/49289578/7077907" target="_blank" rel="noopener">https://stackoverflow.com/a/49289578/7077907</a> 。</p><p><strong>如何更好的兼容之前的代码？</strong>直接加 <code>!!</code> 处理是没有问题的，如果你觉得这样写过于丑陋并且看起来十分危险，可以用 <code>activity ? : return</code> 这样的写法代替，或者更好的方式是使用 <strong>Google</strong> 新提供的方法：</p><figure class="highlight kotlin hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">requireActivity()</span><br><span class="line">requireContext()</span><br></pre></td></tr></table></figure><p>这两个方法的返回值是不为 <code>null</code> 的，内部作了判空抛异常处理。具体文档可看源码或这里：<a href="https://developer.android.com/topic/libraries/support-library/revisions#27-1-0" target="_blank" rel="noopener">https://developer.android.com/topic/libraries/support-library/revisions#27-1-0</a></p><p>以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Google&lt;/strong&gt; 又双叒升级了 Android 的开发库，我们将根目录下的 &lt;code&gt;build:gradle&lt;/code&gt; 版本由原先的 &lt;code&gt;2.3.3&lt;/code&gt; 升级至 &lt;code&gt;3.1.2&lt;/code&gt;，随之带来的问题是 &lt;code&gt;Support Library&lt;/code&gt; 也需要升级。升级之后，&lt;code&gt;gradle&lt;/code&gt; 脚本以及 &lt;code&gt;support&lt;/code&gt; 包下相关类的 &lt;strong&gt;Api&lt;/strong&gt; 发生了重大的改动。具体需要注意的改动如下：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/09/03/hello-world/"/>
    <id>http://yoursite.com/2018/09/03/hello-world/</id>
    <published>2018-09-03T02:03:37.000Z</published>
    <updated>2018-10-31T10:49:55.078Z</updated>
    
    <content type="html"><![CDATA[<p>Hello, World !<br><a id="more"></a><br>Hello, Hexo ! <br><br>你好。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hello, World !&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
</feed>
