{"pages":[{"title":"我们","text":"鼎阅Android团队","link":"/about/index.html"}],"posts":[{"title":"build:gradle 3.0 以及 Support Library 27.1.0 带来的 Api 变动","text":"Google 又双叒升级了 Android 的开发库，我们将根目录下的 build:gradle 版本由原先的 2.3.3 升级至 3.1.2，随之带来的问题是 Support Library 也需要升级。升级之后，gradle 脚本以及 support 包下相关类的 Api 发生了重大的改动。具体需要注意的改动如下： build.gradle 文件引入依赖的方式由原来的 compile 变更为现在的 implementation 和 api 关键字，这两个关键字的区别在于是否能传递依赖，例如： 注意：使用旧的关键字 compile 进行依赖应用并不会报错，只会报警告。使用 implementation 可以提升编译速度。 Support Library 27新的 support 包带来便捷的新特性，如自带生命周期组件中的 android.arch.lifecycle:runtime 库，但对现有代码对兼容带来不小的麻烦。 ⚠️最明显的变化就是 Fragment 中的 getActivity() 以及 getContext() 方法返回的被标记为 @Nullable, 也就是返回值可能为 null , 于是在 Kotlin 中所有获取 Activity、Context 实例的地方都需要判空操作。 其实 Google 并没有更改代码逻辑，返回 null 是因为 fragment 没有加入到 actiivty 中，这个逻辑处理之前的版本就存在，只是相比之前加上 @Nullable 注解，具体可以看这里的解释：https://stackoverflow.com/a/49289578/7077907 。 如何更好的兼容之前的代码？直接加 !! 处理是没有问题的，如果你觉得这样写过于丑陋并且看起来十分危险，可以用 activity ? : return 这样的写法代替，或者更好的方式是使用 Google 新提供的方法： 12requireActivity()requireContext() 这两个方法的返回值是不为 null 的，内部作了判空抛异常处理。具体文档可看源码或这里：https://developer.android.com/topic/libraries/support-library/revisions#27-1-0 以上。","link":"/2018/09/03/new-api-in-gradle-3-0-and-support-library-27-1-0/"},{"title":"Hello World","text":"Hello, World !Hello, Hexo ! 你好。","link":"/2018/09/03/hello-world/"}],"tags":[],"categories":[{"name":"其他","slug":"其他","link":"/categories/其他/"}]}